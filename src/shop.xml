<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Main">	
	<select id="getShops" parameterType="hashmap" resultType="com.marspotato.supportsmallshop.BO.Shop">
		<![CDATA[
		select id, name, short_description as shortDescription, full_description as fullDescription, 
		search_tags as searchTags, open_hours as openHours, shop_type as shopType, 
		district, address, phone, latitude1000000, longitude1000000, photo_url as photoUrl
		from shop
		where 1=1 
		]]>
		<if test="hasGeoSearch != null">
			and (latitude1000, longitude1000) in
			<foreach item="areaBlock" index="index" collection="areaBlockArray" open="(" separator="," close=")">
				(#{areaBlock.latitude1000,javaType=int}, #{areaBlock.longitude1000,javaType=int})
			</foreach>
		</if>
		<if test="searchWord != null">
			and (
				search_tags like '%' || #{searchWord,javaType=String} || '%'
				or name like '%' || #{searchWord,javaType=String} || '%'
				or short_description like '%' || #{searchWord,javaType=String} || '%'
				or full_description like '%' || #{searchWord,javaType=String} || '%'
				or address like '%' || #{searchWord,javaType=String} || '%'
				or phone like '%' || #{searchWord,javaType=String} || '%'
			)
		</if>
		<if test="district != null">
			and district = #{district,javaType=int}
		</if>
		<if test="shopType != null">
			and shop_type = #{shopType,javaType=String}::shop_type
		</if>
		ORDER BY random() LIMIT #{MAX_SHOP_RECORD_LIMIT,javaType=int}
	</select>
	
	<insert id="createNewShopFromSubmission" parameterType="hashmap">
		insert into shop
		(
			id, name, short_description, full_description, search_tags, shop_type,
			open_hours, district, address, phone, photo_url,
			latitude1000, longitude1000, latitude1000000, longitude1000000
		)
		select #{shopId,javaType=String}::uuid, name, short_description, full_description, search_tags, shop_type,  
		open_hours, district, address, phone, photo_url,
		latitude1000000 / 1000::integer, longitude1000000 / 1000::integer, latitude1000000, longitude1000000
		from submission
		where id = #{id,javaType=String}::uuid
	</insert>
	
	<update id="mergeShopWithSubmission" parameterType="String">
		update shop 
		set 
		name                 = coalesce(submission.name, shop.name),
		short_description    = coalesce(submission.short_description   , shop.short_description   ),
		full_description     = coalesce(submission.full_description    , shop.full_description    ),
		search_tags          = coalesce(submission.search_tags         , shop.search_tags         ),
		shop_type            = coalesce(submission.shop_type           , shop.shop_type           ),
		open_hours           = coalesce(submission.open_hours          , shop.open_hours          ),
		district             = coalesce(submission.district            , shop.district            ),
		address              = coalesce(submission.address             , shop.address             ),
		phone                = coalesce(submission.phone               , shop.phone               ),
		photo_url			 = coalesce(submission.photo_url           , shop.photo_url           ),
		latitude1000000      = coalesce(submission.latitude1000000     , shop.latitude1000000     ),
		longitude1000000     = coalesce(submission.longitude1000000    , shop.longitude1000000    ),
		latitude1000         = (case when submission.latitude1000000 is not null then submission.latitude1000000 / 1000::integer else shop.latitude1000 end),
		longitude1000        = (case when submission.longitude1000000 is not null then submission.longitude1000000 / 1000::integer else shop.longitude1000 end)
		FROM submission
		where submission.id = #{id,javaType=String}::uuid
		and shop.id = submission.shop_id
	</update>
</mapper>